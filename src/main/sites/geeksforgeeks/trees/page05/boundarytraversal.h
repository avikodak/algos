/****************************************************************************************************************************************************
 *  File Name   		: boundarytraversal.h 
 *	File Location		: C:\Users\AVINASH\Desktop\CC++\algorithms\src\main\sites\geeksforgeeks\trees\page05\boundarytraversal.h
 *  Created on			: May 16, 2014 :: 1:03:05 AM
 *  Author				: AVINASH
 *  Testing Status 		: TODO
 *  URL 				: TODO
 ****************************************************************************************************************************************************/

/****************************************************************************************************************************************************/
/* 														NAMESPACE DECLARATION AND IMPORTS 														    */
/****************************************************************************************************************************************************/

using namespace std;
using namespace __gnu_cxx;

/****************************************************************************************************************************************************/
/* 																INCLUDES		 																    */
/****************************************************************************************************************************************************/

#include <string>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <iostream>
#include <fstream>
#include <sstream>
#include <string.h>
#include <hash_map>
#include <stack>
#include <queue>
#include <limits.h>
#include <algos/utils/ds/tree/treeds.h>
#include <algos/utils/common/tree/tree.h>

/****************************************************************************************************************************************************/
/* 															USER DEFINED CONSTANTS 																    */
/****************************************************************************************************************************************************/

#define null NULL

/****************************************************************************************************************************************************/
/* 																MAIN CODE START 																    */
/****************************************************************************************************************************************************/

#ifndef BOUNDARYTRAVERSAL_H_
#define BOUNDARYTRAVERSAL_H_

/****************************************************************************************************************************************************/
/* 																	O(N) Algorithm 																    */
/****************************************************************************************************************************************************/
void printLeftBoundary(itNode *ptr){
	if(ptr == null || (ptr->left == null && ptr->right == null)){
		return;
	}
	printf("%d\t",ptr->value);
	if(ptr->left != null){
		printLeftBoundary(ptr->left);
	}else{
		printLeftBoundary(ptr->right);
	}
}

void printLeaves(itNode *ptr){
	if(ptr == null){
		return;
	}
	if(ptr->left == null && ptr->right == null){
		printf("%d\t",ptr->value);
		return;
	}
	printLeaves(ptr->left);
	printLeaves(ptr->right);
}

void printRightBoundary(itNode *ptr){
	if(ptr == null || (ptr->left == null && ptr->right == null)){
		return;
	}
	if(ptr->right != null){
		printLeftBoundary(ptr->right);
	}else{
		printLeftBoundary(ptr->left);
	}
	printf("%d\t",ptr->value);
}

void printBoundaryTree(itNode *ptr){
	if(ptr == null){
		return;
	}
	printLeftBoundary(ptr);
	printLeaves(ptr);
	printRightBoundary(ptr);
}

/****************************************************************************************************************************************************/
/* 																O(NLOGN) Algorithm 																    */
/****************************************************************************************************************************************************/

/****************************************************************************************************************************************************/
/* 																O(N^2) Algorithm 																    */
/****************************************************************************************************************************************************/


#endif /* BOUNDARYTRAVERSAL_H_ */

/****************************************************************************************************************************************************/
/* 																MAIN CODE END 																	    */
/****************************************************************************************************************************************************/
